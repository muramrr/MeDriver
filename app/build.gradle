/*
 * Created by Andrii Kovalchuk
 * Copyright (C) 2020. medriver
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see https://www.gnu.org/licenses
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

def versionMajor = 1
def versionMinor = 0
def versionPatch = 7
def year = 2020
def month = 12

android {

	compileSdkVersion 30
	buildToolsVersion "30.0.3"

	defaultConfig {
		applicationId "com.mmdev.me.driver"
		minSdkVersion 21
		targetSdkVersion 30
		versionCode "$year$month$versionMajor$versionMinor${if (versionPatch < 10) 0}$versionPatch".toInteger()
		//versionCode timestampVersion()
		versionName "${versionMajor}.${versionMinor}.TEST0${versionPatch}"

		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

		javaCompileOptions {
			annotationProcessorOptions {
				arguments += [
						"room.schemaLocation":"$projectDir/schemas".toString(),
						"room.incremental":"true",
						"room.expandProjection":"true"
				]
			}
		}
	}

	signingConfigs {
		release {

		}
	}

	buildTypes {
		release {
			minifyEnabled true
			shrinkResources true
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
			//signingConfig signingConfigs.release
		}

		debug {

		//	minifyEnabled true
		//	proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
		}

	}

	buildFeatures {
		dataBinding = true
	}

	compileOptions {
		// Flag to enable support for the new language APIs
		coreLibraryDesugaringEnabled true
		// Sets Java compatibility to Java 8
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}

	kotlinOptions {
		jvmTarget = "1.8"
	}
	testOptions {
		unitTests.returnDefaultValues = true
		animationsDisabled = true
	}

}

dependencies {

	coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.1'
	implementation fileTree(dir: "libs", include: ["*.jar"])
	implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.21"
	implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:1.0.1"
	implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.0.1"
	implementation "org.jetbrains.kotlinx:kotlinx-datetime:0.1.0"
	implementation "androidx.core:core-ktx:1.5.0-alpha05"
	implementation "androidx.constraintlayout:constraintlayout:2.1.0-alpha2"
	implementation "com.google.android.material:material:1.3.0-beta01"
	implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
	implementation "com.airbnb.android:lottie:3.5.0"

	//di
	implementation "org.koin:koin-androidx-viewmodel:2.2.0"
	implementation "org.koin:koin-androidx-fragment:2.2.0"

	//navigation
	implementation "androidx.navigation:navigation-ui-ktx:2.3.2"
	implementation "androidx.navigation:navigation-fragment-ktx:2.3.2"

	//Kotlin Coroutines
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2'
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2'
	implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.0-rc01"
	
	//network
	implementation "com.squareup.retrofit2:retrofit:2.9.0"
	implementation "com.squareup.okhttp3:logging-interceptor:4.10.0-RC1"

	// Room
	implementation "androidx.room:room-runtime:2.3.0-alpha04"
	implementation "androidx.room:room-ktx:2.3.0-alpha04"
	kapt "androidx.room:room-compiler:2.3.0-alpha04"

	//firebase
	implementation platform('com.google.firebase:firebase-bom:26.1.0')
	implementation 'com.google.firebase:firebase-auth-ktx'
	implementation 'com.google.firebase:firebase-firestore-ktx'
	implementation 'com.google.firebase:firebase-messaging-ktx'
	implementation 'com.google.firebase:firebase-crashlytics-ktx'
	implementation 'com.google.firebase:firebase-analytics-ktx'

	//prefs wrapper
	implementation 'com.cioccarellia:ksprefs:2.0.0'

	//purchases
	implementation 'com.revenuecat.purchases:purchases:4.0.1'

	//WorkManager
	implementation "androidx.work:work-runtime-ktx:2.5.0-beta02"

	testImplementation "junit:junit:4.13.1"
	testImplementation 'io.mockk:mockk:1.10.3'
	testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2'
	testImplementation "androidx.arch.core:core-testing:2.1.0"
	androidTestImplementation "androidx.work:work-testing:2.5.0-beta02"
	androidTestImplementation 'io.mockk:mockk-android:1.10.3'
	androidTestImplementation "androidx.test.ext:junit:1.1.3-alpha02"
	androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0-alpha02"
	androidTestImplementation "org.koin:koin-test:2.2.0"

	debugImplementation "com.squareup.leakcanary:leakcanary-android:2.6"
}
